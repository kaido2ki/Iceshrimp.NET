on:
  release:
    types:
      - published
jobs:
  build-artifacts:
    runs-on: docker
    container:
      image: iceshrimp.dev/iceshrimp/iceshrimp.net:ci-env-wasm
      options: --volume /opt/iceshrimp-cache/nuget:/root/.nuget
    steps:
      - name: Clone repository
        run: git clone ${{ github.event.repository.clone_url }} --branch=${{ github.ref_name }} /src
      - name: Build project (amd64)
        shell: bash
        run: |-
          cd /src/Iceshrimp.Backend
          mkdir -p /out/linux-amd64
          dotnet publish -c Release -p:EnableAOT=true -p:EnableLibVips=true -p:BundleNativeDeps=true -r linux-amd64 -o /out/linux-amd64
      - name: Build project (arm64)
        shell: bash
        run: |-
          cd /src/Iceshrimp.Backend
          mkdir -p /out/linux-arm64
          dotnet publish -c Release -p:EnableAOT=true -p:EnableLibVips=true -p:BundleNativeDeps=true -r linux-arm64 -o /out/linux-arm64
      - name: Generate artifacts
        shell: bash
        run: |-
          mkdir artifacts
          tar cavf artifacts/${{ github.event.repository.name }}-${{ github.ref_name }}-linux-amd64.tar.zst --transform 's,^out/linux-amd64,${{ github.event.repository.name }}-${{ github.ref_name }},' /out/linux-amd64
          tar cavf artifacts/${{ github.event.repository.name }}-${{ github.ref_name }}-linux-arm64.tar.zst --transform 's,^out/linux-arm64,${{ github.event.repository.name }}-${{ github.ref_name }},' /out/linux-arm64
      - name: Upload artifacts
        uses: actions/release-action@main
        with:
          files: |-
            artifacts/**
          api_key: '${{secrets.RELEASE_TOKEN}}'
      - name: Authenticate against the docker registry
        run: docker login iceshrimp.dev -u ${{ github.actor }} -p ${{ secrets.REGISTRY_TOKEN }}
      - name: Initialize builder
        run: docker buildx use iceshrimp-ci || docker buildx create --name iceshrimp-ci --use
      - name: Set environment variables
        shell: bash
        run: |
          # First, we set the docker repository we want to push to
          REPO="iceshrimp.dev/${GITHUB_REPOSITORY@L}"
          
          # We always want to tag :{version} and :pre, but only tag :latest for stable releases, and (temporarily) v2024.1-beta releases
          TAGS="-t $REPO:$GITHUB_REF_NAME -t $REPO:pre"
          
          # The first section below can be safely removed once v2024.1 hits stable
          if [[ "$GITHUB_REF_NAME" == "v2024.1-beta"* ]]; then
            TAGS="$TAGS -t $REPO:latest"
          elif [[ "$GITHUB_REF_NAME" == *"-beta"* ]] || [[ "$GITHUB_REF_NAME" == *"-pre"* ]]; then
            :
          else
            TAGS="$TAGS -t $REPO:latest"
          fi

          # Finally, we pass the computed tags back to the actions environment
          echo "TAGS=$TAGS" >> "${GITHUB_ENV}"
      - name: Build the image
        shell: bash
        run: |
          cp /src/.forgejo/ci-release/Dockerfile /out
          docker buildx build ${{ env.TAGS }} --provenance=false --platform=linux/amd64,linux/arm64 --push /out
      - name: Purge cache
        run: docker buildx prune --keep-storage 10G
