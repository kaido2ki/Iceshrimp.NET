[Instance]
ListenPort = 3000
ListenHost = localhost

;; If you want to have the application listen on a unix socket instead, uncomment the line below. Make sure to configure filesystem permissions correctly!
;;ListenSocket = /var/run/iceshrimp/iceshrimp.net.sock

;; Caution: changing these settings after initial setup *will* break federation
WebDomain = shrimp.example.org
AccountDomain = example.org
;; End of problematic settings block

;; Maximum number of characters allowed for local notes (must not be larger than the global limit, which is 100000 characters)
CharacterLimit = 8192

[Worker]
;; If you intend to run in cluster mode, uncomment the line below & set it to a string (max. 64 characters) that's unique per worker node (e.g. the kubernetes pod id)
;;WorkerId = 1

[Security]
;; Whether to require incoming ActivityPub requests carry a valid HTTP or LD signature
;; It is highly recommend you keep this enabled if you intend to use block- or allowlist federation
AuthorizedFetch = true

;; Whether to attach LD signatures to outgoing activities
AttachLdSignatures = false

;; Whether to accept activities signed using LD signatures
AcceptLdSignatures = false

;; The level of detail in API error responses
;; Options: [None, Basic, Full]
ExceptionVerbosity = Basic

;; Whether to allow instance registrations
;; Options: [Closed, Invite, Open]
Registrations = Closed

;; Whether to use a blocklist or allowlist for controlling who can federate with this instance
;; Options: [BlockList, AllowList]
FederationMode = BlockList

;; Whether to expose the list of blocked/allowed instances publicly, for registered users only, or not at all
;; Options: [Public, Registered, Hide]
ExposeFederationList = Registered

;; Whether to expose the reason for instance blocks publicly, for registered users only, or not at all
;; Options: [Public, Registered, Hide]
ExposeBlockReasons = Registered

;; Whether to enable public preview of locally originating notes
;;
;; Public = No restrictions
;; Restricted = Hide replies from remote instances
;; RestrictedNoMedia = Hide replies remote instances & hide media
;; Lockdown = Public preview is disabled, all unauthenticated API access (except authentication) is disabled
;;
;; Options: [Public, Restricted, RestrictedNoMedia, Lockdown]
PublicPreview = Public

[Database]
;; Hostname, IP address or path to unix socket directory (specifying port is required even for unix sockets)
Host = localhost
Port = 5432
Database = iceshrimp
Username = iceshrimp
Password = iceshrimp

[Storage]
;; Where to store media attachments
;; Options: [Local, ObjectStorage]
Provider = Local

;; Amount of time remote media is retained in the cache (0 = disabled, -1 = infinite)
MediaRetention = 30d

;; Whether to cleanup avatars & banners past the media retention time
CleanAvatars = false
CleanBanners = false

[Storage:Local]
;; Path where media is stored at. Must be writable for the service user.
Path = /path/to/media/location

[Storage:ObjectStorage]
;;Endpoint = endpoint.example.org
;;Region = us-east-1
;;KeyId = <yourAccessKey>
;;SecretKey = <yourSecretKey>
;;Bucket = <yourBucketName>
;;Prefix =
;;AccessUrl = https://endpoint.example.org/<yourBucketName>
;;SetAcl = public-read

[Logging:LogLevel]
Default = Information
Iceshrimp = Information
Microsoft.AspNetCore = Warning
Microsoft.EntityFrameworkCore = Warning
Microsoft.EntityFrameworkCore.Migrations = Information
Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager = Critical
Iceshrimp.Backend.Hubs.Authentication.HubAuthenticationHandler = Warning