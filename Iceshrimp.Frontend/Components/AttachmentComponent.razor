@using Iceshrimp.Assets.PhosphorIcons
@using Iceshrimp.Frontend.Localization
@using Iceshrimp.Shared.Schemas.Web
@using Microsoft.Extensions.Localization
@inject IStringLocalizer<Localization> Loc;
@inject IJSRuntime                     Js;

<div class="wrapper" @onclick="Open" @onclick:stopPropagation="true">
    @if (Attachment.ContentType.StartsWith("image"))
    {
        <img class="attachment @(BlurImage ? "blur-image" : "")" src="@Attachment.Url" alt="@Attachment.AltText"
             fetchpriority="low"/>
    }
    //  else if (Attachment.ContentType == "audio/x-mod")
    //  {
    //      TODO: Module player
    //  }                
    else if (Attachment.ContentType.StartsWith("audio"))
    {
        <audio controls class="attachment @(BlurImage ? "blur-image" : "")" src="@Attachment.Url"></audio>
    }
    else if (Attachment.ContentType.StartsWith("video"))
    {
        <video controls class="attachment @(BlurImage ? "blur-image" : "")">
            <source src="@Attachment.Url"/>
        </video>
    }
    else
    {
        <span class="attachment file @(BlurImage ? "blur-image" : "")">
            <Icon Name="Icons.FileArrowDown" Size="3em"/>
            <a href="@Attachment.Url" target="_blank">
                @Attachment.Url.Split("/").Last()
            </a>
        </span>
    }

    @if (!string.IsNullOrWhiteSpace(Attachment.AltText))
    {
        <button @onclick="DisplayAlt" @onclick:stopPropagation="true" class="alt-btn" title="@Attachment.AltText">
            <Icon Name="Icons.ClosedCaptioning"/>
        </button>
    }
    else
    {
        <button @onclick="DisplayAlt" @onclick:stopPropagation="true" class="alt-btn" title="@Loc["No alt text"]">
            <Icon Name="Icons.Warning"/>
        </button>
    }
</div>

@code {
    [Parameter] [EditorRequired] public required NoteAttachment        Attachment { get; set; }
    [Parameter] [EditorRequired] public required EventCallback<NoteAttachment> OnOpen     { get; set; }

    private bool BlurImage { get; set; }

    private void Open()
    {
        if (BlurImage)
        {
            BlurImage = false;
            StateHasChanged();
        }
        else if (Attachment.ContentType.StartsWith("image"))
        {
            OnOpen.InvokeAsync(Attachment);
        }
    }

    protected override void OnParametersSet()
    {
        BlurImage = Attachment.IsSensitive;
    }

    private async Task DisplayAlt()
    {
        await Js.InvokeVoidAsync("alert", string.IsNullOrWhiteSpace(Attachment.AltText) ? Loc["No alt text"] : Attachment.AltText);
    }
}