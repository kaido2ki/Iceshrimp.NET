name: .Net and Docker

on:
  workflow_dispatch:
  schedule:
    - cron: '55 17 * * *'
  push:
    branches: [ "dev" ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "dev" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Add ice repository
        run: |
          git remote add ice https://iceshrimp.dev/iceshrimp/Iceshrimp.NET.git
          git fetch ice
      - name: Sync ice branch to upstream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions" 
          git config --global user.email "actions@github.com"
          git checkout upstream || git checkout -b upstream
          UPSTREAM_BRANCH="${{ inputs.upstream_branch || 'dev' }}"
          git reset --hard ice/$UPSTREAM_BRANCH
      - name: Push updates to origin/upstream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push origin upstream -f
          
      - name: Check for changes between upstream/dev and origin/upstream
        id: check_changes
        run: |
          git fetch origin  # 获取远程 origin 信息
          # 比较 upstream/dev 和 origin/upstream 分支的差异
          changes=$(git diff --name-only upstream/dev..origin/upstream)
          if [ -z "$changes" ]; then
            echo "No changes detected. Skipping Docker build."
            echo "should_build=false" >> $GITHUB_ENV  # 设置 should_build 环境变量以跳过构建
          else
            echo "Changes detected. Proceeding with Docker build."
            echo "should_build=true" >> $GITHUB_ENV  # 设置 should_build 为 true，继续构建
          fi
      
  build:
    runs-on: ubuntu-latest
    
    needs: sync
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      # Step 1: Checkout repository (sync branch)
      - name: Checkout repository
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        uses: actions/checkout@v4
        with:
          ref: upstream

      # Step 2: Switch to upstream branch
      - name: Checkout upstream branch
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        run: |
          git fetch origin upstream  # Fetch the latest upstream branch
          git checkout upstream || git checkout -b upstream  # Checkout upstream branch or create if it doesn't exist
          
      # Step 3: Print git log
      - name: Print git log
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        run: |
          git log --oneline --graph --decorate --abbrev-commit -n 10
          
      # Install cosign tool except on PR
      - name: Install cosign
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0
        with:
          cosign-release: 'v2.2.4'

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0
        
      # Log into registry
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata for Docker
      - name: Extract Docker metadata
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image
      - name: Build and push Docker image
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: .
          build-args: AOT=true
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the Docker image (skip on PR)
      - name: Sign the published Docker image
        if: github.event_name != 'pull_request' && env.should_build == 'true'
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
